class Proper_fraction():
    """Класс по работе с правильными дробями"""

    def __init__(self, x, y):
        """Свойства дроби"""
        self.numenator = x
        self.denominator = y
       
    def _gcd(self,a, b):
        """Наибольший общий делитель для сокращения дроби"""
        while a % b != 0:
            self._oldm = a
            self._oldn = b

            a = self._oldn
            b = self._oldm % self._oldn
        return b

    def __str__(self):
        """Cоздание строк из данных свойства дроби в строку с конкатенацией этих строк с помощью символа / между ними"""
        return str(self.numenator) + "/" + str(self.denominator)

    def show(self):
        """Отображение дробей"""
        print(self.numenator, "/", self.denominator)

    def __add__(self, value):
        """Сложение"""
        newnum = self.numenator * value.denominator + self.denominator * value.numenator
        newden = self.denominator * value.denominator
        result = self._gcd(newnum,newden)
        return Proper_fraction(newnum // result, newden // result)

    def __sub__(self, value):
        """Вычитание"""
        newnum = self.numenator * value.denominator - value.numenator * self.denominator
        newden = self.denominator * value.denominator
        result = self._gcd(newnum,newden)
        return Proper_fraction(newnum // result, newden // result)

    def __mul__(self, value):
        """Умножение"""
        newnum = self.numenator * value.numenator
        newden = self.denominator * value.denominator
        result = self._gcd(newnum,newden)
        return Proper_fraction(newnum // result, newden // result)

    def __truediv__(self, value):
        """Деление"""
        newnum = self.numenator * value.denominator
        newden = self.denominator * value.numenator
        result = self._gcd(newnum,newden)
        return Proper_fraction(newnum // result, newden // result)

Value1 = Proper_fraction(1, 4)
Value2 = Proper_fraction(1, 2)
print(Value1 / Value2)
